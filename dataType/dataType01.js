 1. 비트
* 컴퓨터가 이해할 수 있는 가장 작은 단위
* 0과 1을 가지고 있는 메모리를 구성하기 위한 작은조각을 의미
* 작은 조각들이 모여서 '메모리'가 만들어짐

 2. 바이트
* 0과1만 표현하는 비트를 모두 찾기는 부담스럽다
* 8개의 비트 -> 바이트(byte)

 3. 메모리 : byte단위로 구성
* 모든 데이터는 byte단위의 식별자인 메모리 주소값을 통해서 서로 구분이 된다.
---
 java, c와 다른 javascript의 메모리 관리방식(정수형)

1. 8을 저장하는 방법
    1. JS : let a = 8(8byte)
    
    2. JAVA
        1. byte a = 8(1byte)
        2. short a = 8(2byte)
        3. int a = 8(4byte)
        4. long a = 8(16byte)
        
> java 또는 c언어가 초기에 등장했을 때 숫자 데이터 타입은 크기에 따라 다양하게 지정해줘야 할 만큼 개발자가 handling 할 요소들이 많았다


 식별자, 변수
1. var testValue = 3
2. 변수 = 데이터
3. 식별자 = 변수명


 변수 선언과 데이터 할당
**할당 예시**
![](https://velog.velcdn.com/images/rkdwnstjr16/post/84483b4e-b4e3-4613-99a5-ea6db2df422a/image.png)
1. 	'test'(데이터값)을 바로 1002번주소의 데이터값에 넣지않고 5004번 주소에 일단 넣는다
2.	 5004번 담긴 데이터의 주소를 1002번 데이터저장공간에 가져온다

예) var a = 8 이라고 변수를 지정하면
-> 변수명 a와 변수데이터가 저장되있는 데이터 영역의 주소값이 저장된다.

# 값을 바로 변수영역에 대입하지 않는 이유 ( 무족건 새로 만드는 이유)

1. 자유로운 데이터 변환
	* 이미 입력한 문자열이 길어진다면...
    * 숫자는 항상 8byte로 고정이지만, 문자는 고정이 아니다
    그래서, 이미 1002번 주소에 할당된 데이터를 변환하려 할 떄 더큰 데이터를 저장하려하면 1002번 주소 옆에 있던 모든 데이터가 오른쪽으로 미뤄지게된다

2. 메모리의 효율적 관리
	* 똑같은 데이터를 여러번 저장해야 한다면?
    * 1만개의 변수를 생성, 모든 변수에 숫자 1을 할당하는 상황이다
    모든 변수를 별개로 인식한다하면, 1만개의 변수 공간을 확보해야함
    * 바로 데이터를 변수영역에 대입하게된다면...
    1만개 * 8byte = **8만 byte**
    * 데이터 영역에 값을 저장하면...
    변수영역(1만개 * 2byte(변수영역데이터는 2byte로 가정) + 데이터 영역(8byte 1개)) = **2만 8바이트**
    

---

## 기본형 데이터의 불변성

var a = abc 변수를 선언
var a = abcde 라고 변수를 재선언하면
변수 영역의 a의 주소값은 변하지않음
데이터 영역의 "abc"이 담긴 주소(가정/5002번)에 데이터가 "abc"에서 "abcde"로 바뀐것이아닌,5003번의 주소에 "abcde"라는 데이터가 저장되고
변수 영역의 데이터를 불러오는 주소값을 5003번으로 변경만 되는 것.
**따라서, 변수a는 불변하다라고 할 수 있다**

* 사용하지 않는 5002번의 주소는 JS에 가비지컬렉터라는 애가 처리함

---

## 참조형 데이터의 가변성


// 참조형 데이터는 별도 저장공간(obj1을 위한 별도 공간)이 필요합니다!
var obj1 = {
	a: 1,
	b: 'bbb'
};

   
![](https://velog.velcdn.com/images/rkdwnstjr16/post/9a35bcee-3161-4000-9e12-b9b56ef63fe9/image.png)

* 참조형 데이터는 별도의 저장공간이 필요함.

 중첩객체의 할당

* 자바스크립트에서 중첩객체란, 객체 안에 또 다른 객체가 들어가는 것


var obj = {
	x: 3,
	arr: [3, 4, 5],
}
`
4. 중첩객체의 할당
    
자바스크립트에서 중첩객체란, 객체 안에 또 다른 객체가 들어가는 것객체는 배열, 함수 등을 모두 포함하는 상위개념이기 때문에 **배열을 포함하는 객체도 중첩객체**라고 할 수 있다.
    
    x
    var obj = {
    	x: 3,
    	arr: [3, 4, 5],
    }
    

![](https://velog.velcdn.com/images/rkdwnstjr16/post/f5fb3ce3-333a-45d0-9d85-a3f99280fbb3/image.png)

 변수 복사의 비교


// STEP01. 쭉 선언을 먼저 해볼께요.
var a = 10; //기본형
var obj1 = { c: 10, d: 'ddd' }; //참조형

// STEP02. 복사를 수행해볼께요.
var b = a; //기본형
var obj2 = obj1; //참조형

![](https://velog.velcdn.com/images/rkdwnstjr16/post/f25952d1-d312-4a14-8f53-63834a04c72f/image.png)
